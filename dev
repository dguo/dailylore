#!/usr/bin/env python3
# ./dev --help

import argparse
from http.client import HTTPException
import os
import socket
from subprocess import run
import sys
import time
from urllib.error import URLError
from urllib.request import urlopen
import webbrowser

def open_in_browser(url):
    while True:
        try:
            urlopen(url)
            webbrowser.open(url)
            return
        except (ConnectionError, UrlError, HTTPException):
            time.sleep(1)
    attempts = 0
    while attempts < 300:
        try:
            if urllib2.urlopen(url).getcode() == 200:
                print('The server is up.')
                return
        except (socket.error, BadStatusLine, urllib2.URLError):
            pass

def command(help):
    def decorator(func):
        parser = subparsers.add_parser(func.__name__, help=help)
        parser.set_defaults(func=func)
        return func
    return decorator

parser = argparse.ArgumentParser(prog='./dev')
subparsers = parser.add_subparsers(metavar='<command>', title='commands')

@command('Format the code')
def format(args, remaining):
    return run(['yarn', 'run', 'format']).returncode

@command('Lint the code')
def lint(args, remaining):
    return run(['yarn', 'run', 'lint']).returncode

if __name__ == '__main__':
    if len(sys.argv) > 1:
        args, remaining = parser.parse_known_args()
        returncode = args.func(args, remaining)
        sys.exit(returncode)
    else:
        parser.print_help()
